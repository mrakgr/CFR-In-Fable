@using Microsoft.AspNetCore.Components.Web.Virtualization;
@using static Lproj.Types
@using Microsoft.FSharp.Core

<!--suppress SpellCheckingInspection -->
<div class="train-table border">
    <h1>Game Sequence</h1>
    <h1>Action(Probability)</h1>
    @foreach (var (k,v) in Model.GetPolicyMap())
    {
        <div class="train-sequences">
            @foreach (var el in k)
            {
                if (el is FSharpChoice<Types.Action, Card>.Choice1Of2 act)
                {
                    @ModelAction(act.Item);
                }
                else if (el is FSharpChoice<Types.Action, Card>.Choice2Of2 card)
                {
                    <div class="train-card">
                        @card.Item.ToString()
                    </div>
                }
            }
        </div>

        var actions = v.actions;
        var prob = normalize(IsTrain ? v.current_regrets : v.unnormalized_policy_average);
        var els = actions.Zip(prob).ToArray();
        <div class="train-action-probs">
            <Virtualize TItem="(Types.Action,double)" Items="els" Context="el">
                <div class="train-action-probs-item">
                    @ModelAction(el.Item1)
                    <div class="train-probability">
                        @ShowProbability(el.Item2)
                    </div>
                </div>
            </Virtualize>
        </div>
    }
</div>

@code {
    [Parameter]
    [EditorRequired]
    public required CFRPlayerModel Model { get; set; }

    [Parameter]
    [EditorRequired]
    public required bool IsTrain { get; set; }

    RenderFragment ModelAction(Types.Action act)
    {
        return @<div class="@css_train_action(act)">
                   @act.ToString()
               </div>;
    }

    string ShowProbability(double prob)
    {
        var p = (prob * 100.0).ToString("0.##");
        return $"({p})";
    }

}