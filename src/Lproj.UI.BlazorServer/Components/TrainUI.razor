@using ApexCharts

@using static Lproj.Types
@using TData = Tuple<int, Tuple<double, double>>
@inherits TrainUI_Base<TData>

<div class="train-ui border">
    @Menu()
    <div class="train-chart border">
        <ApexChart @ref="_chart" TItem="TData" Width="ContainerFit" Height="ContainerFit">
            @Series("Self Play Reward In First Position", e => (decimal)e.Item2.Item1)
            @Series("Self Play Reward In Last Position", e => (decimal)e.Item2.Item2)
        </ApexChart>
    </div>
    <TableUI Model="M.training_model"
             IsTrain="true"/>
</div>

@code {
    // Why is this chart's data elements in the right order?
    // Who cares at this point?

    // Great!
    // This rewrite is done!

    RenderFragment Series(string name, Func<TData,decimal?> yValue)
    {
        return @<ApexPointSeries TItem="TData"
                                 SeriesType="SeriesType.Line"
                                 OrderBy="e => e.X"
                                 Items="Model.cfr_players[Model.active_cfr_player].training_results"
                                 XValue="e => e.Item1"

                                 Name="@name"
                                 YValue="@yValue"/>;
    }

    private RenderFragment Menu()
    {
        var m = M;
        return CreateMenu(
            Model.active_cfr_player,
            m.training_run_iterations,
            m.training_iterations_left,
            "Training",
            (x => Dispatch(MsgClient.NewCFRPlayerSelected(x.Value!.ToString()))),
            (_ => Dispatch(MsgClient.TrainingStartClicked)),
            (x => Dispatch(MsgClient.NewTrainingInputIterationsChanged(x.Value!.ToString())))
            );
    }
}