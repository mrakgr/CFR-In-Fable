@using ApexCharts
@using static Lproj.Types

@inherits TrainUI_Menu
@using TData = Tuple<int, double>

<div class="train-ui border">
    @Menu()
    <div class="train-chart border">
        <ApexChart TItem="TData" Width="ContainerFit" Height="ContainerFit">
            @Series("Training Reward VS A Static Clone In First Position", v => (decimal) v.Item2)
        </ApexChart>
    </div>
    <TableUI Model="M.testing_model"
             IsTrain="false"/>
</div>

@code {
    // As mentioned, we'll start with some printf statements.

    RenderFragment Series(string name, Func<TData, decimal?> yValue)
    {
        return @<ApexPointSeries TItem="TData"
                                 SeriesType="SeriesType.Line"
                                 OrderBy="e => e.X"
                                 Items="Items"
                                 XValue="@((TData v) => v.Item1)"

                                 Name="@name"
                                 YValue="@yValue"/>;
    }

    private RenderFragment Menu()
    {
        var m = M;
        return CreateMenu(
            Model.active_cfr_player,
            m.testing_run_iterations,
            m.testing_iterations_left,
            "Testing",
            (x => Dispatch(MsgClient.NewCFRPlayerSelected(x.Value!.ToString()))),
            (_ => Dispatch(MsgClient.TestingStartClicked)),
            (x => Dispatch(MsgClient.NewTestingInputIterationsChanged(x.Value!.ToString())))
            );
    }

}

@code {
    private IEnumerable<TData> Items
    {
        get { return Model.cfr_players[Model.active_cfr_player].testing_results.Select((v, i) => new Tuple<int, double>(i, v)); }
    }

}