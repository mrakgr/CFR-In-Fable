@using ApexCharts;

@using static FunUtils

<ApexChart TItem="TestData"
           Title="Order Net Value"
           Width="ContainerFit"
           Height="ContainerFit">

    <ApexPointSeries TItem="TestData"
                     Items="_data"
                     Name="Max Value"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => e.iteration)"
                     YAggregate="@(e => e.Max(x => (decimal)x.value))"
                     OrderBy="e => e.X"/>

    <ApexPointSeries TItem="TestData"
                     Items="_data"
                     Name="Min Value"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => e.iteration)"
                     YAggregate="@(e => e.Min(x => (decimal)x.value))"
                     OrderBy="e => e.X"/>

</ApexChart>

@code {
    // Great!
    // Let's plug this chart into the other page.

    // Not bad. With this we are done with the UI mostly.
    // We'll plug the relevant data into the chart, once we integrate the frontend with the backend.

    // Let me think...
    // ...
    // ...

    TestData[] _data = chart_data(10);
    static readonly string ContainerFit = "100%";
}